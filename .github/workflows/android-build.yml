name: Build WizLightsOff APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip openjdk-17-jdk unzip wget
          pip install --upgrade Cython virtualenv setuptools wheel
          pip install --upgrade buildozer pywizlight

      - name: Install Android SDK
        run: |
          export ANDROID_SDK_ROOT="$GITHUB_WORKSPACE/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT"

          # Download Android command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT"

          # Manually fix folder structure
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true

          # Ensure sdkmanager is executable
          chmod +x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"

          # Set environment variables
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/34.0.0:$PATH" >> $GITHUB_ENV

      - name: Verify SDK and Install Components
        run: |
          export ANDROID_SDK_ROOT="$GITHUB_WORKSPACE/android-sdk"

          # Verify sdkmanager exists
          if [ ! -f "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "Error: sdkmanager not found!"
            exit 1
          fi

          # Accept licenses and install required components
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --install \
              "platform-tools" \
              "build-tools;34.0.0" \
              "platforms;android-34" \
              "ndk;25.1.8937393"

      - name: Ensure WizLightsOff Directory Exists
        run: mkdir -p "$GITHUB_WORKSPACE/WizLightsOff"

      - name: Initialize Buildozer
        run: |
          cd "$GITHUB_WORKSPACE/WizLightsOff"
          buildozer init || true

      - name: Ensure Buildozer Directories Exist
        run: mkdir -p "$GITHUB_WORKSPACE/WizLightsOff/.buildozer/android/platform/python-for-android"

      - name: Delete Old Build Directories
        run: rm -rf "$GITHUB_WORKSPACE/WizLightsOff/.buildozer/android/platform/build-arm64-v8a_armeabi-v7a" || true

      - name: Run Buildozer Dependencies
        run: |
          cd "$GITHUB_WORKSPACE/WizLightsOff"
          buildozer -v android dependencies || true

      - name: Build APK
        run: |
          cd "$GITHUB_WORKSPACE/WizLightsOff"
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: WizLightsOff-APK
          path: WizLightsOff/bin/*.apk
          retention-days: 7

      - name: Cleanup
        run: |
          echo "Cleaning up orphaned processes..."
          pkill -f buildozer || true
          pkill -f python || true

